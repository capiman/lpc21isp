/******************************************************************************

Project:           Portable command line ISP for NXP LPC family
                   and Analog Devices ADUC70xx

Filename:          README

Compiler:          Microsoft VC 6/7, Microsoft VS2008, Microsoft VS2010,
                   GCC Cygwin, GCC Linux, GCC ARM ELF

Author:            Martin Maurer (Martin.Maurer@clibb.de)

Copyright:         (c) Martin Maurer 2003-2013, All rights reserved
Portions Copyright (c) by Aeolus Development 2004 http://www.aeolusdevelopment.com

    This file is part of lpc21isp.

    lpc21isp is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    lpc21isp is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    and GNU General Public License along with lpc21isp.
    If not, see <http://www.gnu.org/licenses/>.
*/


To compile with microsoft visual studio:
- Open console. Execute bat file from your installation, e.g.
  "c:\Program Files\Microsoft Visual Studio 9.0\VC\bin\vcvars32.bat"
- Go to directory where you unpacked the source.
- Run
  nmake /f Makefile.vc clean all

To compile with gcc (linux, cygwin, ...)
- Open shell / terminal windows
- Run (if you want to use make and gcc)
  make -f Makefile.gnu clean all
- Run (if you want to use gmake and gcc)
  gmake -f Makefile.gnu clean all

CMake Project Generator
- Place your build folder anywhere, passing CMake the path. Relative or absolute.
- Some examples using a build folder under the source tree root:
  - Android : "cmake -DCMAKE_TOOLCHAIN_FILE=~/Android/Sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=android-21 -DANDROID_ABI=armeabi-v7a .. && make"
  - Android Studio : Copy repo under your project's "app" folder, add "add_subdirectory(lpc21isp)" to your CMakeLists.txt file after "cmake_minimum_required()". Generating project will build Debug/Release for all supported EABI types. ie. arm64-v8a, armeabi-v7a, x86, x86_64.
  - Raspberry Pi : "cmake -DCMAKE_TOOLCHAIN_FILE=~/rpi/tools/build/cmake/rpi.toolchain.cmake .. && make"
  - Linux : "cmake -GNinja .. && ninja"
  - Linux Eclipse Photon (Debug) : "CC=clang cmake -G"Eclipse CDT4 - Unix Makefiles" ../lpc21isp/ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_ECLIPSE_VERSION=4.8.0"
- To override the base installation directory use: CMAKE_INSTALL_PREFIX, e.g.
  "CC=clang cmake -DCMAKE_INSTALL_PREFIX=./out .. && make install"